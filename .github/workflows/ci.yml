name: CI (tests)

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]
  workflow_dispatch:

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: "pip"
          cache-dependency-path: |
            requirements-dev.txt
            requirements.txt

      - name: Set up Java (for PySpark)
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "11"

      - name: Install dependencies
        run: |
          if [ -f requirements-dev.txt ]; then
            pip install -r requirements-dev.txt
          elif [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install pyspark==3.5.1 pytest
          fi
          python -V
          java -version
          python -c "import pyspark; print('PySpark', pyspark.__version__)"

      - name: Run tests
        env:
          # Optionnel: éviter l’avertissement de résolution IP en local
          SPARK_LOCAL_IP: 127.0.0.1
        run: |
          pytest -q

      # (Optionnel) publier le rapport JUnit si tu en génères un
      # - name: Upload test results
      #   if: always()
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: pytest-results
      #     path: pytest-report.xml
